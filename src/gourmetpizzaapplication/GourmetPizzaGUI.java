/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gourmetpizzaapplication;

import java.awt.Color;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/**
 *
 * @author merhawit
 */
public class GourmetPizzaGUI extends javax.swing.JFrame {
    
            

    private double price = 3.99;
    private double price1 = 3.99;
    private static int orderNo = 1;

    private double fillingsPrice = 0;
    private double fillingsPrice1 = 0;
    private double totalPrice;

    /**
     * Creates new form GourmetPizzaGUI
     */
    public GourmetPizzaGUI() {
//        JScrollPane container = new JScrollPane(jPanel6);
//        container.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
//        container.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        initComponents();
        setDefault();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        pepperoniCheckbox2 = new java.awt.Checkbox();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        mushroomCheckbox2 = new java.awt.Checkbox();
        sweetcornCheckbox2 = new java.awt.Checkbox();
        chilliCheckbox2 = new java.awt.Checkbox();
        crustCheckbox2 = new java.awt.Checkbox();
        sizeComboBox2 = new javax.swing.JComboBox<>();
        priceField3 = new javax.swing.JTextField();
        beefCheckbox2 = new java.awt.Checkbox();
        jLabel24 = new javax.swing.JLabel();
        chickenCheckbox2 = new java.awt.Checkbox();
        jLabel13 = new javax.swing.JLabel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        invalid1 = new javax.swing.JLabel();
        testPop = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        addressField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        mobileField = new javax.swing.JTextField();
        pizza1Panel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        sizeComboBox = new javax.swing.JComboBox<>();
        priceField = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        barbecueRB = new javax.swing.JRadioButton();
        tomatoRB = new javax.swing.JRadioButton();
        jLabel28 = new javax.swing.JLabel();
        thinCrustRB = new javax.swing.JRadioButton();
        deepPanRB = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        fillingPriceField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        specialOfferLabel = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        xCheeseCB = new javax.swing.JCheckBox();
        beefCB = new javax.swing.JCheckBox();
        chickenCB = new javax.swing.JCheckBox();
        pepperoniCB = new javax.swing.JCheckBox();
        mushroomCB = new javax.swing.JCheckBox();
        sweetcornCB = new javax.swing.JCheckBox();
        chilliCB = new javax.swing.JCheckBox();
        meatFeastCB = new javax.swing.JCheckBox();
        pizzaNoLabel = new javax.swing.JLabel();
        addPizzaButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        invalid1Label = new javax.swing.JLabel();
        invalid2Label = new javax.swing.JLabel();
        invalid3Label = new javax.swing.JLabel();
        postcodeLabel = new javax.swing.JLabel();
        postcodeField = new javax.swing.JTextField();
        postcodeInvalid = new javax.swing.JLabel();
        postcodeHint = new javax.swing.JLabel();
        totalPriceField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        offerLabel = new javax.swing.JLabel();
        newButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        addPizzaPanel = new javax.swing.JPanel();
        deepPanRB1 = new javax.swing.JRadioButton();
        jLabel22 = new javax.swing.JLabel();
        fillingPriceField1 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        meatFeastCB1 = new javax.swing.JCheckBox();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        specialOfferLabel1 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        xCheeseCB1 = new javax.swing.JCheckBox();
        jLabel39 = new javax.swing.JLabel();
        beefCB1 = new javax.swing.JCheckBox();
        sizeComboBox1 = new javax.swing.JComboBox<>();
        chickenCB1 = new javax.swing.JCheckBox();
        priceField1 = new javax.swing.JTextField();
        pepperoniCB1 = new javax.swing.JCheckBox();
        jLabel40 = new javax.swing.JLabel();
        mushroomCB1 = new javax.swing.JCheckBox();
        jLabel41 = new javax.swing.JLabel();
        sweetcornCB1 = new javax.swing.JCheckBox();
        barbecueRB1 = new javax.swing.JRadioButton();
        chilliCB1 = new javax.swing.JCheckBox();
        tomatoRB1 = new javax.swing.JRadioButton();
        jLabel42 = new javax.swing.JLabel();
        thinCrustRB1 = new javax.swing.JRadioButton();
        pizza2CB = new javax.swing.JCheckBox();
        summaryArea = new java.awt.TextArea();
        addPizza1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        orderNoInc = new javax.swing.JLabel();

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setText("Number of Pizza");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel17.setText("Size:");

        pepperoniCheckbox2.setLabel("Pepperoni");

        jLabel21.setText("Extras");

        jLabel23.setText("Filling:");

        mushroomCheckbox2.setLabel("Mushroom");

        sweetcornCheckbox2.setLabel("Sweetcorn");

        chilliCheckbox2.setLabel("Chilli");

        crustCheckbox2.setLabel("Extra Cheese");

        sizeComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Small", "Medium", "Large", " " }));
        sizeComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeComboBox2ActionPerformed(evt);
            }
        });

        beefCheckbox2.setLabel("beef");

        jLabel24.setText("Price");

        chickenCheckbox2.setLabel("Chicken");

        jLabel13.setText("Sauce:");

        jRadioButton5.setText("Barbecue ");

        jRadioButton6.setText("Tomato");

        jLabel14.setText("Crust");

        jRadioButton7.setText("Thin Crust");
        jRadioButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton7ActionPerformed(evt);
            }
        });

        jRadioButton8.setText("Deep Pan");

        jButton2.setText("Add pizza");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sizeComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jRadioButton5)
                                        .addGap(63, 63, 63)
                                        .addComponent(jRadioButton6))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(beefCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(chickenCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(pepperoniCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(115, 115, 115)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(mushroomCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(sweetcornCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                                        .addComponent(chilliCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                                                        .addComponent(jLabel9)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addComponent(crustCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButton7)
                                        .addGap(57, 57, 57)
                                        .addComponent(jRadioButton8))
                                    .addComponent(jButton2))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(priceField3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(sizeComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jRadioButton7)
                    .addComponent(jRadioButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel23))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(beefCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mushroomCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chickenCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sweetcornCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pepperoniCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chilliCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(crustCheckbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        invalid1.setText("Invalid!");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Malayalam MN", 0, 40)); // NOI18N
        jLabel1.setText("Gourmet Pizza");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Address*");

        addressField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                addressFocusLost(evt);
            }
        });

        nameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFocusLost(evt);
            }
        });
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Contact Name*");

        jLabel5.setText("Mobile Number*");

        mobileField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                mNFocusLost(evt);
            }
        });
        mobileField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileFieldActionPerformed(evt);
            }
        });

        pizza1Panel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setText("Size:");

        jLabel25.setText("Extras");

        jLabel26.setText("Filling:");

        sizeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Small", "Medium", "Large", " " }));
        sizeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeComboBoxActionPerformed(evt);
            }
        });

        priceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceFieldActionPerformed(evt);
            }
        });

        jLabel27.setText("Price");

        jLabel15.setText("Sauce:");

        barbecueRB.setText("Barbecue ");
        barbecueRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barbecueRBActionPerformed(evt);
            }
        });

        tomatoRB.setText("Tomato");
        tomatoRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tomatoRBActionPerformed(evt);
            }
        });

        jLabel28.setText("Crust");

        thinCrustRB.setText("Thin Crust");
        thinCrustRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thinCrustRBActionPerformed(evt);
            }
        });

        deepPanRB.setText("Deep Pan");
        deepPanRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deepPanRBActionPerformed(evt);
            }
        });

        jLabel4.setText("Price");

        fillingPriceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillingPriceFieldActionPerformed(evt);
            }
        });

        jLabel7.setText("+50p");

        jLabel8.setText("+50p");

        jLabel10.setText("+50p");

        jLabel11.setText("+50p");

        jLabel12.setText("+50p");

        jLabel16.setText("+50p");

        jLabel19.setText("+50p");

        specialOfferLabel.setText("*Special Offer* Meat Feast: All the meat chosen together costs £1 ");

        jLabel20.setText("+50p");

        xCheeseCB.setText("Extra Cheese");
        xCheeseCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xCheeseCBActionPerformed(evt);
            }
        });

        beefCB.setText("Beef");
        beefCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beefCBActionPerformed(evt);
            }
        });

        chickenCB.setText("Chicken");
        chickenCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickenCBActionPerformed(evt);
            }
        });

        pepperoniCB.setText("Pepperoni");
        pepperoniCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pepperoniCBActionPerformed(evt);
            }
        });

        mushroomCB.setText("Mushroom");
        mushroomCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mushroomCBActionPerformed(evt);
            }
        });

        sweetcornCB.setText("Sweetcorn");
        sweetcornCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sweetcornCBActionPerformed(evt);
            }
        });

        chilliCB.setText("Chilli");
        chilliCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chilliCBActionPerformed(evt);
            }
        });

        meatFeastCB.setText("meat Feast Offer");
        meatFeastCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meatFeastCBActionPerformed(evt);
            }
        });

        pizzaNoLabel.setText("Pizza 1:");

        addPizzaButton.setText("Add a pizza 2");
        addPizzaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPizzaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pizza1PanelLayout = new javax.swing.GroupLayout(pizza1Panel);
        pizza1Panel.setLayout(pizza1PanelLayout);
        pizza1PanelLayout.setHorizontalGroup(
            pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pizza1PanelLayout.createSequentialGroup()
                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pizza1PanelLayout.createSequentialGroup()
                        .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pizza1PanelLayout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pizza1PanelLayout.createSequentialGroup()
                                        .addComponent(jLabel28)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(thinCrustRB)
                                        .addGap(57, 57, 57)
                                        .addComponent(deepPanRB))
                                    .addGroup(pizza1PanelLayout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pizza1PanelLayout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(barbecueRB)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel20)
                                                .addGap(23, 23, 23)
                                                .addComponent(tomatoRB))
                                            .addGroup(pizza1PanelLayout.createSequentialGroup()
                                                .addComponent(jLabel25)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(xCheeseCB)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel7))
                                            .addComponent(addPizzaButton)
                                            .addGroup(pizza1PanelLayout.createSequentialGroup()
                                                .addComponent(jLabel26)
                                                .addGap(2, 2, 2)
                                                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pizza1PanelLayout.createSequentialGroup()
                                                        .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addGroup(pizza1PanelLayout.createSequentialGroup()
                                                                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                    .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                        .addGroup(pizza1PanelLayout.createSequentialGroup()
                                                                            .addComponent(chickenCB)
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                            .addComponent(jLabel11))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pizza1PanelLayout.createSequentialGroup()
                                                                            .addComponent(pepperoniCB)
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                            .addComponent(jLabel10)))
                                                                    .addGroup(pizza1PanelLayout.createSequentialGroup()
                                                                        .addComponent(beefCB)
                                                                        .addGap(48, 48, 48)
                                                                        .addComponent(jLabel8)))
                                                                .addGap(126, 126, 126))
                                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pizza1PanelLayout.createSequentialGroup()
                                                                .addComponent(meatFeastCB)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                        .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(pizza1PanelLayout.createSequentialGroup()
                                                                    .addComponent(mushroomCB)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                    .addComponent(jLabel16))
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addGroup(pizza1PanelLayout.createSequentialGroup()
                                                                        .addComponent(chilliCB)
                                                                        .addGap(43, 43, 43)
                                                                        .addComponent(jLabel19))
                                                                    .addGroup(pizza1PanelLayout.createSequentialGroup()
                                                                        .addComponent(sweetcornCB)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                        .addComponent(jLabel12))))
                                                            .addGroup(pizza1PanelLayout.createSequentialGroup()
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel4)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(fillingPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(specialOfferLabel, javax.swing.GroupLayout.Alignment.TRAILING)))))))
                            .addGroup(pizza1PanelLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(pizzaNoLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(100, 100, 100))
                    .addGroup(pizza1PanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel27)
                        .addGap(40, 40, 40)
                        .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pizza1PanelLayout.setVerticalGroup(
            pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pizza1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pizza1PanelLayout.createSequentialGroup()
                        .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(pizzaNoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(thinCrustRB)
                            .addComponent(deepPanRB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(barbecueRB)
                            .addComponent(tomatoRB)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel25)
                        .addComponent(xCheeseCB))
                    .addGroup(pizza1PanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel7)))
                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pizza1PanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel26))
                    .addGroup(pizza1PanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(specialOfferLabel)
                        .addGap(25, 25, 25)
                        .addComponent(meatFeastCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pizza1PanelLayout.createSequentialGroup()
                                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(beefCB)
                                    .addComponent(jLabel8))
                                .addGap(1, 1, 1)
                                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chickenCB))
                                .addGap(3, 3, 3)
                                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pepperoniCB)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pizza1PanelLayout.createSequentialGroup()
                                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mushroomCB)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1)
                                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sweetcornCB))
                                .addGap(3, 3, 3)
                                .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chilliCB))))
                        .addGap(26, 26, 26)
                        .addGroup(pizza1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(fillingPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addPizzaButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        invalid1Label.setText("Invalid!");

        invalid2Label.setText("Invalid!");

        invalid3Label.setText("Invalid!");

        postcodeLabel.setText("Postcode*");

        postcodeField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                postcodeFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                postcodeFieldFocusLost(evt);
            }
        });
        postcodeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postcodeFieldActionPerformed(evt);
            }
        });

        postcodeInvalid.setText("Invalid!");

        postcodeHint.setText("Input with space");

        totalPriceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPriceFieldActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Total Price");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        offerLabel.setText("Meat Feast offer applied!");

        newButton.setText("New");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        backButton.setText("Main");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        addPizzaPanel.setBackground(new java.awt.Color(255, 255, 255));

        deepPanRB1.setText("Deep Pan");
        deepPanRB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deepPanRB1ActionPerformed(evt);
            }
        });

        jLabel22.setText("Price");

        fillingPriceField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillingPriceField1ActionPerformed(evt);
            }
        });

        jLabel29.setText("+50p");

        meatFeastCB1.setText("meat Feast Offer");
        meatFeastCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meatFeastCB1ActionPerformed(evt);
            }
        });

        jLabel30.setText("+50p");

        jLabel31.setText("+50p");

        jLabel32.setText("+50p");

        jLabel33.setText("+50p");

        jLabel34.setText("+50p");

        jLabel35.setText("+50p");

        jLabel36.setText("Size:");

        specialOfferLabel1.setText("*Special Offer* Meat Feast: All the meat chosen together costs £1 ");

        jLabel37.setText("+50p");

        jLabel38.setText("Extras");

        xCheeseCB1.setText("Extra Cheese");
        xCheeseCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xCheeseCB1ActionPerformed(evt);
            }
        });

        jLabel39.setText("Filling:");

        beefCB1.setText("Beef");
        beefCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beefCB1ActionPerformed(evt);
            }
        });

        sizeComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Small", "Medium", "Large", " " }));
        sizeComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeComboBox1ActionPerformed(evt);
            }
        });

        chickenCB1.setText("Chicken");
        chickenCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickenCB1ActionPerformed(evt);
            }
        });

        priceField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceField1ActionPerformed(evt);
            }
        });

        pepperoniCB1.setText("Pepperoni");
        pepperoniCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pepperoniCB1ActionPerformed(evt);
            }
        });

        jLabel40.setText("Price");

        mushroomCB1.setText("Mushroom");
        mushroomCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mushroomCB1ActionPerformed(evt);
            }
        });

        jLabel41.setText("Sauce:");

        sweetcornCB1.setText("Sweetcorn");
        sweetcornCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sweetcornCB1ActionPerformed(evt);
            }
        });

        barbecueRB1.setText("Barbecue ");
        barbecueRB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barbecueRB1ActionPerformed(evt);
            }
        });

        chilliCB1.setText("Chilli");
        chilliCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chilliCB1ActionPerformed(evt);
            }
        });

        tomatoRB1.setText("Tomato");
        tomatoRB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tomatoRB1ActionPerformed(evt);
            }
        });

        jLabel42.setText("Crust");

        thinCrustRB1.setText("Thin Crust");
        thinCrustRB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thinCrustRB1ActionPerformed(evt);
            }
        });

        pizza2CB.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        pizza2CB.setText("Pizza 2");
        pizza2CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pizza2CBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPizzaPanelLayout = new javax.swing.GroupLayout(addPizzaPanel);
        addPizzaPanel.setLayout(addPizzaPanelLayout);
        addPizzaPanelLayout.setHorizontalGroup(
            addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPizzaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPizzaPanelLayout.createSequentialGroup()
                        .addComponent(pizza2CB, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPizzaPanelLayout.createSequentialGroup()
                        .addGap(0, 77, Short.MAX_VALUE)
                        .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPizzaPanelLayout.createSequentialGroup()
                                .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel41)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(barbecueRB1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel37)
                                        .addGap(23, 23, 23)
                                        .addComponent(tomatoRB1))
                                    .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel38)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(xCheeseCB1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel29))
                                    .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel36)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sizeComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(264, 264, 264))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPizzaPanelLayout.createSequentialGroup()
                                .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                        .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel39)
                                            .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                                .addGap(81, 81, 81)
                                                .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                                        .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                                                    .addComponent(chickenCB1)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                    .addComponent(jLabel32))
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPizzaPanelLayout.createSequentialGroup()
                                                                    .addComponent(pepperoniCB1)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                    .addComponent(jLabel31)))
                                                            .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                                                .addComponent(beefCB1)
                                                                .addGap(48, 48, 48)
                                                                .addComponent(jLabel30)))
                                                        .addGap(126, 126, 126))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPizzaPanelLayout.createSequentialGroup()
                                                        .addComponent(meatFeastCB1)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                                        .addComponent(mushroomCB1)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jLabel34))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                                            .addComponent(chilliCB1)
                                                            .addGap(43, 43, 43)
                                                            .addComponent(jLabel35))
                                                        .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                                            .addComponent(sweetcornCB1)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addComponent(jLabel33))))))
                                        .addGap(19, 19, 19))
                                    .addGroup(addPizzaPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel22)
                                        .addGap(18, 18, 18)
                                        .addComponent(fillingPriceField1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(specialOfferLabel1))
                                .addGap(34, 34, 34))))))
            .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addPizzaPanelLayout.createSequentialGroup()
                    .addGap(80, 80, 80)
                    .addComponent(jLabel42)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(thinCrustRB1)
                    .addGap(57, 57, 57)
                    .addComponent(deepPanRB1)
                    .addGap(257, 257, 257))
                .addGroup(addPizzaPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel40)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(priceField1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(58, 58, 58)))
        );
        addPizzaPanelLayout.setVerticalGroup(
            addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPizzaPanelLayout.createSequentialGroup()
                .addComponent(pizza2CB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(sizeComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(barbecueRB1)
                    .addComponent(tomatoRB1)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel38)
                        .addComponent(xCheeseCB1))
                    .addGroup(addPizzaPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel29)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specialOfferLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel39)
                .addGap(1, 1, 1)
                .addComponent(meatFeastCB1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPizzaPanelLayout.createSequentialGroup()
                        .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(beefCB1)
                            .addComponent(jLabel30))
                        .addGap(1, 1, 1)
                        .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chickenCB1))
                        .addGap(3, 3, 3)
                        .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pepperoniCB1)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addPizzaPanelLayout.createSequentialGroup()
                        .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mushroomCB1)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sweetcornCB1))
                        .addGap(3, 3, 3)
                        .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chilliCB1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(fillingPriceField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addPizzaPanelLayout.createSequentialGroup()
                    .addGap(71, 71, 71)
                    .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel42)
                        .addComponent(thinCrustRB1)
                        .addComponent(deepPanRB1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(addPizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(priceField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel40))
                    .addContainerGap(203, Short.MAX_VALUE)))
        );

        addPizza1.setText("Add Pizza 1");
        addPizza1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPizza1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(backButton)
                .addGap(263, 263, 263)
                .addComponent(newButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveButton))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(offerLabel)
                        .addGap(28, 28, 28)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(256, 256, 256))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(45, 45, 45)
                                            .addComponent(jLabel3))
                                        .addComponent(jLabel5))
                                    .addComponent(postcodeLabel))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(invalid1Label))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(invalid2Label))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(postcodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(42, 42, 42)
                                                .addComponent(postcodeInvalid))
                                            .addComponent(mobileField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(invalid3Label)
                                            .addComponent(postcodeHint)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addPizza1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pizza1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(addPizzaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(75, 75, 75)
                        .addComponent(summaryArea, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(jLabel2)
                    .addContainerGap(824, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invalid1Label)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invalid2Label)
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invalid3Label)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(postcodeLabel)
                    .addComponent(postcodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postcodeInvalid)
                    .addComponent(postcodeHint))
                .addGap(18, 56, Short.MAX_VALUE)
                .addComponent(addPizza1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pizza1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPizzaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(summaryArea, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(offerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newButton)
                    .addComponent(saveButton)
                    .addComponent(backButton))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jLabel6.setText("Order No.");

        orderNoInc.setFont(new java.awt.Font("Trattatello", 0, 18)); // NOI18N
        orderNoInc.setText("1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(jLabel1)
                .addGap(116, 116, 116)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(orderNoInc, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(orderNoInc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sizeComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeComboBox2ActionPerformed

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void addPizza1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPizza1ActionPerformed
        // TODO add your handling code here:
        pizza1Panel.setVisible(true);
        if(addPizzaPanel.isVisible()){
            addPizzaPanel.setVisible(false);
        }
    }//GEN-LAST:event_addPizza1ActionPerformed

    private void pizza2CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pizza2CBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pizza2CBActionPerformed

    private void thinCrustRB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thinCrustRB1ActionPerformed
        // TODO add your handling code here:
        thinCrustRB1.setSelected(true);
        deepPanRB1.setSelected(false);
        String selectedSize = (String) sizeComboBox1.getSelectedItem();

        if ((selectedSize == "Small") && thinCrustRB1.isSelected() == true) {
            price1 = 3.99;
            priceField1.setText("£" + price1);
        }

        if ((selectedSize == "Medium") && thinCrustRB1.isSelected() == true) {
            price1 = 5.99;
            priceField1.setText("£" + price1);
        }

        if ((selectedSize == "Large") && thinCrustRB1.isSelected() == true) {
            price1 = 8.99;
            priceField1.setText("£" + price1);
        }

        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_thinCrustRB1ActionPerformed

    private void tomatoRB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tomatoRB1ActionPerformed
        // TODO add your handling code here:
        tomatoRB1.setSelected(true);
        barbecueRB1.setSelected(false);
        fillingsPrice1 -= 0.50;
        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_tomatoRB1ActionPerformed

    private void chilliCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chilliCB1ActionPerformed
        // TODO add your handling code here:
        if (chilliCB1.isSelected()) {
            fillingsPrice1 += 0.50;
        } else {
            fillingsPrice1 -= 0.50;
        }
        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_chilliCB1ActionPerformed

    private void barbecueRB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barbecueRB1ActionPerformed
        // TODO add your handling code here:
        barbecueRB1.setSelected(true);
        tomatoRB1.setSelected(false);
        if (barbecueRB1.isSelected()) {
            fillingsPrice1 += 0.50;
        } else {
            fillingsPrice1 -= 0.50;
        }
        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_barbecueRB1ActionPerformed

    private void sweetcornCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sweetcornCB1ActionPerformed
        // TODO add your handling code here:
        if (sweetcornCB1.isSelected()) {
            fillingsPrice1 += 0.50;
        } else {
            fillingsPrice1 -= 0.50;
        }
        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_sweetcornCB1ActionPerformed

    private void mushroomCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mushroomCB1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (mushroomCB1.isSelected()) {
            fillingsPrice1 += 0.50;
        } else {
            fillingsPrice1 -= 0.50;
        }

        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_mushroomCB1ActionPerformed

    private void pepperoniCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pepperoniCB1ActionPerformed
        // TODO add your handling code here:
        if (pepperoniCB1.isSelected()) {
            fillingsPrice1 += 0.50;
            if (meatFeastCB1.isSelected() == true) {
                meatFeastCB1.setSelected(false);
                fillingsPrice1 -= 1;
            }
        } else {
            fillingsPrice1 -= 0.50;
        }

        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_pepperoniCB1ActionPerformed

    private void priceField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceField1ActionPerformed

    private void chickenCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chickenCB1ActionPerformed
        // TODO add your handling code here:
        if (chickenCB1.isSelected()) {
            fillingsPrice1 += 0.50;
            if (meatFeastCB1.isSelected() == true) {
                meatFeastCB1.setSelected(false);
                fillingsPrice1 -= 1;
            }
        } else {
            fillingsPrice1 -= 0.50;
        }

        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_chickenCB1ActionPerformed

    private void sizeComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeComboBox1ActionPerformed

    private void beefCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beefCB1ActionPerformed
        // TODO add your handling code here:
        if (beefCB1.isSelected()) {
            fillingsPrice1 += 0.50;
            if (meatFeastCB1.isSelected() == true) {
                meatFeastCB1.setSelected(false);
                fillingsPrice1 -= 1;
            }
        } else {
            fillingsPrice1 -= 0.50;
        }

        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_beefCB1ActionPerformed

    private void xCheeseCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xCheeseCB1ActionPerformed
        // TODO add your handling code here:
        if (xCheeseCB1.isSelected()) {
            fillingsPrice1 += 0.50;
        } else {
            fillingsPrice1 -= 0.50;
        }
        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_xCheeseCB1ActionPerformed

    private void meatFeastCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meatFeastCB1ActionPerformed
        // TODO add your handling code here:
        if (meatFeastCB1.isSelected()) {
            fillingsPrice1 += 1;
            if (beefCB1.isSelected() == true) {
                beefCB1.setSelected(false);
                fillingsPrice1 -= 0.50;
            }
            if (chickenCB1.isSelected() == true) {
                chickenCB1.setSelected(false);
                fillingsPrice1 -= 0.50;
            }
            if (pepperoniCB1.isSelected() == true) {
                pepperoniCB1.setSelected(false);
                fillingsPrice1 -= 0.50;
            }

        } else {
            fillingsPrice1 -= 1;

        }
        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_meatFeastCB1ActionPerformed

    private void fillingPriceField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillingPriceField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fillingPriceField1ActionPerformed

    private void deepPanRB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deepPanRB1ActionPerformed
        // TODO add your handling code here:
        thinCrustRB1.setSelected(false);
        deepPanRB1.setSelected(true);
        String selectedSize = (String) sizeComboBox1.getSelectedItem();

        if ((selectedSize == "Small") && deepPanRB1.isSelected() == true) {
            price1 = 5.49;
            priceField1.setText("£" + price1);

        }

        if ((selectedSize == "Medium") && deepPanRB1.isSelected() == true) {
            price1 = 7.99;
            priceField1.setText("£" + price1);

        }

        if ((selectedSize == "Large") && deepPanRB1.isSelected() == true) {
            price1 = 11.99;
            priceField1.setText("£" + price1);
            fillingPriceField1.setText("£" + fillingsPrice1);

        }

        fillingPriceField1.setText("£" + fillingsPrice1);
    }//GEN-LAST:event_deepPanRB1ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        new WelcomePage().setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        // TODO add your handling code here:
        totalPriceField.setText("");
        orderNoInc.setText(String.valueOf(orderNo));
        saveButton.setVisible(true);

        setDefault();

        setEditablesTrue();
        setEmptyString();
        restartDefault();

    }//GEN-LAST:event_newButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        meatFeastChecker();
        if(pizza2CB.isSelected()){
        totalPrice = price + fillingsPrice + price1 + fillingsPrice1;
        totalPriceField.setText("£" + totalPrice);
        }
        else{
            totalPrice = price + fillingsPrice;
            totalPriceField.setText("£" + totalPrice);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * This method saves the order as a "txt" file. The name of the order is
     * "order" followed by the order number. This method checks for validations
     * for the name, address, mobile, and postcode field. This method also
     * writes down the order summary into an empty text area that is not visible
     * in the beginning of the program but becomes visible after the save button
     * is pressed.
     *
     * @param evt
     */
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if ((nameField.getText().length()>3)&&(!nameField.getText().contains("^[0-9]?$") && nameField.getText() != null) && (postcodeField.getText().matches("^[B|b][N|n][1-3][ ][0-9][A-Za-z]{2}")) && (addressField.getText().length() > 5) && (mobileField.getText().matches("^(((\\+44\\s?\\d{4}|\\(?0\\d{4}\\)?)\\s?\\d{3}\\s?\\d{3})|((\\+44\\s?\\d{3}|\\(?0\\d{3}\\)?)\\s?\\d{3}\\s?\\d{4})|((\\+44\\s?\\d{2}|\\(?0\\d{2}\\)?)\\s?\\d{4}\\s?\\d{4}))(\\s?\\#(\\d{4}|\\d{3}))?$"))) {
            summaryArea.setText("");
            saveButton.setVisible(false);
            FileWriter fw = null;
            try {

                // TODO add your handling code here:
                //                for(orderNo<=100;orderNo++){
                    File f = new File("Order" + String.valueOf(orderNo) + ".txt");
                    fw = new FileWriter(f);

                    //                File f = new File(String.valueOf(orderNo)+".txt");
                    //                fw = new FileWriter(f);
                    //put the data from the textField e.g. name field in the file
                    fw.write("Order Number: " + orderNo + "\r\n" + "Name: " + nameField.getText() + "\r\n" + "Address: " + addressField.getText() + "\r\n" + "Mobile No.: " + mobileField.getText() + "\r\n" + "Postcode: " + postcodeField.getText() + "\r\n" + "Size: " + sizeComboBox.getSelectedItem() + "\r\n" + "Crust: ");
                    // add the user information to the order summary

                    summaryArea.append("\r\n" + "        Order Summary" + "\r\n" + "\r\n" + "\r\n");
                    summaryArea.append("Pizza 1:" + "\r\n");
                    fw.write("\r\n"+"Pizza1");
                    summaryArea.append("Crust:" + "\r\n");

                    //write down the crust
                    if (thinCrustRB.isSelected() == true) {
                        fw.write("      Thin Crust");
                        summaryArea.append("Thin Crust" + "\r\n");
                    } else {
                        fw.write("Deep Pan");
                        summaryArea.append("    Deep Pan" + "\r\n");
                    }
                    // write down the sauces
                    fw.write("\r\n" + "Sauce: ");
                    summaryArea.append("Sauce:" + "\r\n");
                    if (tomatoRB.isSelected() == true) {
                        fw.write("Tomato");
                        summaryArea.append("    Tomato Sauce" + "\r\n");
                    } else {
                        fw.write("Barbecue");
                        summaryArea.append("    Barbecue Sauce" + "\r\n");
                    }

                    //Write down the fillings in the file and the summary area.
                    fw.write("\r\n" + "Fillings: " + "\r\n");
                    summaryArea.append("Fillings:" + "\r\n");

                    if (beefCB.isSelected() == true) {
                        fw.write("  beef: Yes" + "\r\n");
                        summaryArea.append("    Beef" + "\r\n");
                    } else {
                        fw.write("  beef: No" + "\r\n");
                    }
                    if (chickenCB.isSelected() == true) {
                        fw.write("  Chicken: Yes" + "\r\n");
                        summaryArea.append("    Chicken" + "\r\n");
                    } else {
                        fw.write("  Chicken: No" + "\r\n");
                    }
                    if (pepperoniCB.isSelected() == true) {
                        fw.write("  Pepperoni: Yes" + "\r\n");
                        summaryArea.append("    Pepperoni" + "\r\n");
                    } else {
                        fw.write("  Pepperoni: No" + "\r\n");
                    }
                    if (mushroomCB.isSelected() == true) {
                        fw.write("  Mushroom: Yes" + "\r\n");
                        summaryArea.append("    Mushroom" + "\r\n");
                    } else {
                        fw.write("  Mushroom: No" + "\r\n");
                    }
                    if (sweetcornCB.isSelected() == true) {
                        summaryArea.append("    Sweetcorn" + "\r\n");
                        fw.write("  Sweetcorn: Yes" + "\r\n");
                    } else {
                        fw.write("  Sweetcorn: No" + "\r\n");
                    }
                    if (chilliCB.isSelected() == true) {
                        fw.write("  Chilli: Yes" + "\r\n");
                        summaryArea.append("    Chilli" + "\r\n");
                    } else {
                        fw.write("  Chilli: No" + "\r\n");
                    }
                    if (pizza2CB.isSelected() == true) {
                        fw.write("Pizza 2"+"\r\n");
                        summaryArea.append("\r\n"+"Pizza 2"+"\r\n");
                        if (thinCrustRB1.isSelected() == true) {
                            fw.write("      Thin Crust");
                            summaryArea.append("Thin Crust" + "\r\n");
                        } else {
                            fw.write("Deep Pan");
                            summaryArea.append("    Deep Pan" + "\r\n");
                        }
                        // write down the sauces
                        fw.write("\r\n" + "Sauce: ");
                        summaryArea.append("Sauce:" + "\r\n");
                        if (tomatoRB1.isSelected() == true) {
                            fw.write("Tomato");
                            summaryArea.append("    Tomato Sauce" + "\r\n");
                        } else {
                            fw.write("Barbecue");
                            summaryArea.append("    Barbecue Sauce" + "\r\n");
                        }

                        //Write down the fillings in the file and the summary area.
                        fw.write("\r\n" + "Fillings: " + "\r\n");
                        summaryArea.append("Fillings:" + "\r\n");

                        if (beefCB1.isSelected() == true) {
                            fw.write("  beef: Yes" + "\r\n");
                            summaryArea.append("    Beef" + "\r\n");
                        } else {
                            fw.write("  beef: No" + "\r\n");
                        }
                        if (chickenCB1.isSelected() == true) {
                            fw.write("  Chicken: Yes" + "\r\n");
                            summaryArea.append("    Chicken" + "\r\n");
                        } else {
                            fw.write("  Chicken: No" + "\r\n");
                        }
                        if (pepperoniCB1.isSelected() == true) {
                            fw.write("  Pepperoni: Yes" + "\r\n");
                            summaryArea.append("    Pepperoni" + "\r\n");
                        } else {
                            fw.write("  Pepperoni: No" + "\r\n");
                        }
                        if (mushroomCB1.isSelected() == true) {
                            fw.write("  Mushroom: Yes" + "\r\n");
                            summaryArea.append("    Mushroom" + "\r\n");
                        } else {
                            fw.write("  Mushroom: No" + "\r\n");
                        }
                        if (sweetcornCB1.isSelected() == true) {
                            summaryArea.append("    Sweetcorn" + "\r\n");
                            fw.write("  Sweetcorn: Yes" + "\r\n");
                        } else {
                            fw.write("  Sweetcorn: No" + "\r\n");
                        }
                        if (chilliCB1.isSelected() == true) {
                            fw.write("  Chilli: Yes" + "\r\n");
                            summaryArea.append("    Chilli" + "\r\n");
                        } else {
                            fw.write("  Chilli: No" + "\r\n");
                        }

                    }

                    //double totalPrice = price + fillingsPrice;
                    fw.write("Total Price: " + " £" + totalPrice);

                    summaryArea.append("Total Price: " + "£" + totalPrice);

                    //close the file
                    fw.close();
                    //increment the order no.
                    orderNo++;
                    // set the order number label to the increment order number
                    //orderNoInc.setText(String.valueOf(orderNo));
                    summaryArea.setVisible(true);
                    newButton.setVisible(true);
                    setEditablesFalse();

                } catch (IOException ex) {
                    Logger.getLogger(GourmetPizzaGUI.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        fw.close();
                    } catch (IOException ex) {
                        Logger.getLogger(GourmetPizzaGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                if (!(nameField.getText().matches("^[a-zA-Z][a-z\\s ]*"))) {
                    JOptionPane.showMessageDialog(this, "Please input a valid name");
                }
                if (addressField.getText().length() < 5) {
                    JOptionPane.showMessageDialog(this, "Please input a valid address");
                }
                if (!(mobileField.getText().matches("^(((\\+44\\s?\\d{4}|\\(?0\\d{4}\\)?)\\s?\\d{3}\\s?\\d{3})|((\\+44\\s?\\d{3}|\\(?0\\d{3}\\)?)\\s?\\d{3}\\s?\\d{4})|((\\+44\\s?\\d{2}|\\(?0\\d{2}\\)?)\\s?\\d{4}\\s?\\d{4}))(\\s?\\#(\\d{4}|\\d{3}))?$"))) {
                    JOptionPane.showMessageDialog(this, "Please input a valid mobile number.");
                }
                if (!(postcodeField.getText().matches("^[B|b][N|n][1-3][ ][0-9][A-Za-z]{2}"))) {
                    JOptionPane.showMessageDialog(this, "Please input a valid post code.");
                }
            }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void totalPriceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPriceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalPriceFieldActionPerformed

    private void postcodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postcodeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_postcodeFieldActionPerformed

    private void postcodeFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_postcodeFieldFocusLost
        // TODO add your handling code here:
        postcodeHint.setVisible(false);
        if (!(postcodeField.getText().matches("^[B|b][N|n][1-3][ ][0-9][A-Za-z]{2}"))) {
            postcodeInvalid.setForeground(Color.RED);
            postcodeInvalid.setVisible(true);
        } else {
            postcodeInvalid.setVisible(false);
        }
    }//GEN-LAST:event_postcodeFieldFocusLost

    private void postcodeFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_postcodeFieldFocusGained
        // TODO add your handling code here:
        postcodeHint.setVisible(true);
    }//GEN-LAST:event_postcodeFieldFocusGained

    private void addPizzaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPizzaButtonActionPerformed
        // TODO add your handling code here:
        addPizzaPanel.setVisible(true);
        if(pizza1Panel.isVisible()){
            pizza1Panel.setVisible(false);
        }
    }//GEN-LAST:event_addPizzaButtonActionPerformed

    private void meatFeastCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meatFeastCBActionPerformed
        // TODO add your handling code here:

        if (meatFeastCB.isSelected()) {
            fillingsPrice += 1;
            if (beefCB.isSelected() == true) {
                beefCB.setSelected(false);
                fillingsPrice -= 0.50;
            }
            if (chickenCB.isSelected() == true) {
                chickenCB.setSelected(false);
                fillingsPrice -= 0.50;
            }
            if (pepperoniCB.isSelected() == true) {
                pepperoniCB.setSelected(false);
                fillingsPrice -= 0.50;
            }

        } else {
            fillingsPrice -= 1;

        }
        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_meatFeastCBActionPerformed

    private void chilliCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chilliCBActionPerformed
        // TODO add your handling code here:
        if (chilliCB.isSelected()) {
            fillingsPrice += 0.50;
        } else {
            fillingsPrice -= 0.50;
        }
        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_chilliCBActionPerformed

//        return orderNo;
//    }
    private void sweetcornCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sweetcornCBActionPerformed
        // TODO add your handling code here:
        if (sweetcornCB.isSelected()) {
            fillingsPrice += 0.50;
        } else {
            fillingsPrice -= 0.50;
        }
        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_sweetcornCBActionPerformed

    private void mushroomCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mushroomCBActionPerformed
        // TODO add your handling code here:
        if (mushroomCB.isSelected()) {
            fillingsPrice += 0.50;
        } else {
            fillingsPrice -= 0.50;
        }

        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_mushroomCBActionPerformed

    private void pepperoniCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pepperoniCBActionPerformed
        // TODO add your handling code here:

        if (pepperoniCB.isSelected()) {
            fillingsPrice += 0.50;
            if (meatFeastCB.isSelected() == true) {
                meatFeastCB.setSelected(false);
                fillingsPrice -= 1;
            }
        } else {
            fillingsPrice -= 0.50;
        }

        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_pepperoniCBActionPerformed

    private void chickenCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chickenCBActionPerformed
        // TODO add your handling code here:

        if (chickenCB.isSelected()) {
            fillingsPrice += 0.50;
            if (meatFeastCB.isSelected() == true) {
                meatFeastCB.setSelected(false);
                fillingsPrice -= 1;
            }
        } else {
            fillingsPrice -= 0.50;
        }

        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_chickenCBActionPerformed

    private void beefCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beefCBActionPerformed
        //

        if (beefCB.isSelected()) {
            fillingsPrice += 0.50;
            if (meatFeastCB.isSelected() == true) {
                meatFeastCB.setSelected(false);
                fillingsPrice -= 1;
            }
        } else {
            fillingsPrice -= 0.50;
        }

        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_beefCBActionPerformed

    private void xCheeseCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xCheeseCBActionPerformed
        // TODO add your handling code here:
        if (xCheeseCB.isSelected()) {
            fillingsPrice += 0.50;
        } else {
            fillingsPrice -= 0.50;
        }
        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_xCheeseCBActionPerformed

    private void fillingPriceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillingPriceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fillingPriceFieldActionPerformed

    private void deepPanRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deepPanRBActionPerformed
        // TODO add your handling code here:
        thinCrustRB.setSelected(false);
        deepPanRB.setSelected(true);
        String selectedSize = (String) sizeComboBox.getSelectedItem();

        if ((selectedSize == "Small") && deepPanRB.isSelected() == true) {
            price = 5.49;
            priceField.setText("£" + price);

        }

        if ((selectedSize == "Medium") && deepPanRB.isSelected() == true) {
            price = 7.99;
            priceField.setText("£" + price);

        }

        if ((selectedSize == "Large") && deepPanRB.isSelected() == true) {
            price = 11.99;
            priceField.setText("£" + price);
            fillingPriceField.setText("£" + fillingsPrice);

        }

        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_deepPanRBActionPerformed

    private void thinCrustRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thinCrustRBActionPerformed
        // TODO add your handling code here:
        // this method constantly changes the price depending on the chosen size and thin crust.
        thinCrustRB.setSelected(true);
        deepPanRB.setSelected(false);
        String selectedSize = (String) sizeComboBox.getSelectedItem();

        if ((selectedSize == "Small") && thinCrustRB.isSelected() == true) {
            price = 3.99;
            priceField.setText("£" + price);
        }

        if ((selectedSize == "Medium") && thinCrustRB.isSelected() == true) {
            price = 5.99;
            priceField.setText("£" + price);
        }

        if ((selectedSize == "Large") && thinCrustRB.isSelected() == true) {
            price = 8.99;
            priceField.setText("£" + price);
        }

        fillingPriceField.setText("£" + fillingsPrice);

    }//GEN-LAST:event_thinCrustRBActionPerformed

    private void tomatoRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tomatoRBActionPerformed
        // TODO add your handling code here:
        tomatoRB.setSelected(true);
        barbecueRB.setSelected(false);
        fillingsPrice -= 0.50;
        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_tomatoRBActionPerformed

    private void barbecueRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barbecueRBActionPerformed
        // TODO add your handling code here:

        barbecueRB.setSelected(true);
        tomatoRB.setSelected(false);
        if (barbecueRB.isSelected()) {
            fillingsPrice += 0.50;
        } else {
            fillingsPrice -= 0.50;
        }
        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_barbecueRBActionPerformed

    private void priceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceFieldActionPerformed

    private void sizeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeComboBoxActionPerformed
        // TODO add your handling code here:
        // this method constantly changes the price depending on the chosen size and the crust.
        String selectedSize = (String) sizeComboBox.getSelectedItem();
        if ((selectedSize == "Small") && thinCrustRB.isSelected() == true) {
            price = 3.99;
            priceField.setText("£" + price);
        }

        if ((selectedSize == "Medium") && thinCrustRB.isSelected() == true) {
            price = 5.99;
            priceField.setText("£" + price);
        }

        if ((selectedSize == "Large") && thinCrustRB.isSelected() == true) {
            price = 8.99;
            priceField.setText("£" + price);
        }
        if ((selectedSize == "Small") && deepPanRB.isSelected() == true) {
            price = 5.49;
            priceField.setText("£" + price);

        }

        if ((selectedSize == "Medium") && deepPanRB.isSelected() == true) {
            price = 7.99;
            priceField.setText("£" + price);

        }

        if ((selectedSize == "Large") && deepPanRB.isSelected() == true) {
            price = 11.99;
            priceField.setText("£" + price);
        }
        fillingPriceField.setText("£" + fillingsPrice);
    }//GEN-LAST:event_sizeComboBoxActionPerformed

    private void mobileFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileFieldActionPerformed

    private void mNFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mNFocusLost
        // TODO add your handling code here:

        if (mobileField.getText().matches("^(((\\+44\\s?\\d{4}|\\(?0\\d{4}\\)?)\\s?\\d{3}\\s?\\d{3})|((\\+44\\s?\\d{3}|\\(?0\\d{3}\\)?)\\s?\\d{3}\\s?\\d{4})|((\\+44\\s?\\d{2}|\\(?0\\d{2}\\)?)\\s?\\d{4}\\s?\\d{4}))(\\s?\\#(\\d{4}|\\d{3}))?$")) {
            invalid3Label.setVisible(false);
        } else {
            invalid3Label.setForeground(Color.RED);
            invalid3Label.setVisible(true);
        }
    }//GEN-LAST:event_mNFocusLost

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    /**
     * when the focus is lost from the name field, this method checks whether
     * the name meets the criteria if it doesn't then the invalid label is set
     * to visible.
     *
     *
     */
    private void nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusLost
        // TODO add your handling code here:
        if (((nameField.getText().length()<3)&&nameField.getText().contains("^[0-9]?$"))) {
            invalid1Label.setForeground(Color.RED);
            invalid1Label.setVisible(true);
        } else {
            invalid1Label.setVisible(false);
        }

    }//GEN-LAST:event_nameFocusLost

    private void addressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressFocusLost
        // TODO add your handling code here:
        if ((addressField.getText().length() > 5)) {
            invalid2Label.setVisible(false);
        } else {
            invalid2Label.setForeground(Color.RED);
            invalid2Label.setVisible(true);
        }
    }//GEN-LAST:event_addressFocusLost
    /**
     * this method sets all the fields, combo boxes and radio buttons un
     * editable. his method will be used after the save button is pressed so
     * that it wont allow for any changes before a new order is created.
     *
     */
    private void setEditablesFalse() {
        nameField.setEditable(false);
        addressField.setEditable(false);
        mobileField.setEditable(false);
        sizeComboBox.setEnabled(false);
        thinCrustRB.setEnabled(false);
        deepPanRB.setEnabled(false);
        barbecueRB.setEnabled(false);
        tomatoRB.setEnabled(false);
        xCheeseCB.setEnabled(false);
        beefCB.setEnabled(false);
        chickenCB.setEnabled(false);
        pepperoniCB.setEnabled(false);
        mushroomCB.setEnabled(false);
        sweetcornCB.setEnabled(false);
        chilliCB.setEnabled(false);
        ///////////////////////////
        sizeComboBox1.setEnabled(false);
        thinCrustRB1.setEnabled(false);
        deepPanRB1.setEnabled(false);
        barbecueRB1.setEnabled(false);
        tomatoRB1.setEnabled(false);
        xCheeseCB1.setEnabled(false);
        beefCB1.setEnabled(false);
        chickenCB1.setEnabled(false);
        pepperoniCB1.setEnabled(false);
        mushroomCB1.setEnabled(false);
        sweetcornCB1.setEnabled(false);
        chilliCB1.setEnabled(false);
        postcodeField.setEnabled(false);
        pizza2CB.setEnabled(false);
                
    }

    /**
     * this method sets all the fields, combo boxes and radio buttons un
     * editable. his method will be used after the new button is pressed so that
     * it will allow for changes before the new order is saved. 
     *
     */
    private void setEditablesTrue() {
        nameField.setEditable(true);
        addressField.setEditable(true);
        mobileField.setEditable(true);
        sizeComboBox.setEnabled(true);
        thinCrustRB.setEnabled(true);
        deepPanRB.setEnabled(true);
        barbecueRB.setEnabled(true);
        tomatoRB.setEnabled(true);
        xCheeseCB.setEnabled(true);
        beefCB.setEnabled(true);
        chickenCB.setEnabled(true);
        pepperoniCB.setEnabled(true);
        mushroomCB.setEnabled(true);
        sweetcornCB.setEnabled(true);
        chilliCB.setEnabled(true);
        /////////////
        sizeComboBox1.setEnabled(true);
        thinCrustRB1.setEnabled(true);
        deepPanRB1.setEnabled(true);
        barbecueRB1.setEnabled(true);
        tomatoRB1.setEnabled(true);
        xCheeseCB1.setEnabled(true);
        beefCB1.setEnabled(true);
        chickenCB1.setEnabled(true);
        pepperoniCB1.setEnabled(true);
        mushroomCB1.setEnabled(true);
        sweetcornCB1.setEnabled(true);
        chilliCB1.setEnabled(true);
    }

    /**
     * This method is used to set the fields empty this method is to be used
     * after the new button is pressed.
     */
    private void setEmptyString() {
        nameField.setText("");
        addressField.setText("");
        mobileField.setText("");
    }

    private void restartDefault() {
        addPizzaPanel.setVisible(false);
        pizza1Panel.setVisible(false);
        sizeComboBox.setSelectedItem("Small");
        thinCrustRB.setSelected(true);
        deepPanRB.setSelected(false);
        barbecueRB.setSelected(false);
        tomatoRB.setSelected(true);
        xCheeseCB.setSelected(false);
        beefCB.setSelected(false);
        meatFeastCB.setSelected(false);
        chickenCB.setSelected(false);
        pepperoniCB.setSelected(false);
        mushroomCB.setSelected(false);
        sweetcornCB.setSelected(false);
        chilliCB.setSelected(false);
        sizeComboBox1.setSelectedItem("Small");
        thinCrustRB1.setSelected(true);
        deepPanRB1.setSelected(false);
        barbecueRB1.setSelected(false);
        tomatoRB1.setSelected(true);
        xCheeseCB1.setSelected(false);
        beefCB1.setSelected(false);
        meatFeastCB1.setSelected(false);
        chickenCB1.setSelected(false);
        pepperoniCB1.setSelected(false);
        mushroomCB1.setSelected(false);
        sweetcornCB1.setSelected(false);
        chilliCB1.setSelected(false);
        postcodeField.setText("");
        
    }

    private void setDefault() {
        postcodeHint.setVisible(false);
        invalid1Label.setVisible(false);
        invalid2Label.setVisible(false);
        invalid3Label.setVisible(false);
        postcodeField.setText("");
        
        
        thinCrustRB.setSelected(true);
        barbecueRB.setSelected(true);
        fillingsPrice += 0.50;
        fillingPriceField.setText("£" + fillingsPrice);
        priceField.setText("£" + price);
        specialOfferLabel.setForeground(Color.RED);
        specialOfferLabel1.setForeground(Color.RED);
        priceField.setEditable(false);
        fillingPriceField.setEditable(false);
        totalPriceField.setEditable(false);
        summaryArea.setVisible(false);
        newButton.setVisible(false);
        offerLabel.setVisible(false);
        postcodeInvalid.setVisible(false);
        /////////////////////////////////////
        thinCrustRB1.setSelected(true);
        barbecueRB1.setSelected(true);
        fillingsPrice1 += 0.50;
        fillingPriceField1.setText("£" + fillingsPrice);
        priceField1.setText("£" + price);
        priceField1.setEditable(false);
        fillingPriceField1.setEditable(false);
        addPizzaPanel.setVisible(false);
        pizza1Panel.setVisible(false);
    }    private boolean meatFeastChecker() {
        if (meatFeastCB.isSelected() == true) {
            offerLabel.setForeground(Color.RED);
            offerLabel.setVisible(true);

            return true;
        } else {
            offerLabel.setVisible(false);
        }
        return false;
    }//    public  static int getOrderNumber(){
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GourmetPizzaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GourmetPizzaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GourmetPizzaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GourmetPizzaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GourmetPizzaGUI().setVisible(false);
                new WelcomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPizza1;
    private javax.swing.JButton addPizzaButton;
    private javax.swing.JPanel addPizzaPanel;
    private javax.swing.JTextField addressField;
    private javax.swing.JButton backButton;
    private javax.swing.JRadioButton barbecueRB;
    private javax.swing.JRadioButton barbecueRB1;
    private javax.swing.JCheckBox beefCB;
    private javax.swing.JCheckBox beefCB1;
    private java.awt.Checkbox beefCheckbox2;
    private javax.swing.JCheckBox chickenCB;
    private javax.swing.JCheckBox chickenCB1;
    private java.awt.Checkbox chickenCheckbox2;
    private javax.swing.JCheckBox chilliCB;
    private javax.swing.JCheckBox chilliCB1;
    private java.awt.Checkbox chilliCheckbox2;
    private java.awt.Checkbox crustCheckbox2;
    private javax.swing.JRadioButton deepPanRB;
    private javax.swing.JRadioButton deepPanRB1;
    private javax.swing.JTextField fillingPriceField;
    private javax.swing.JTextField fillingPriceField1;
    private javax.swing.JLabel invalid1;
    private javax.swing.JLabel invalid1Label;
    private javax.swing.JLabel invalid2Label;
    private javax.swing.JLabel invalid3Label;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JCheckBox meatFeastCB;
    private javax.swing.JCheckBox meatFeastCB1;
    private javax.swing.JTextField mobileField;
    private javax.swing.JCheckBox mushroomCB;
    private javax.swing.JCheckBox mushroomCB1;
    private java.awt.Checkbox mushroomCheckbox2;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton newButton;
    private javax.swing.JLabel offerLabel;
    private javax.swing.JLabel orderNoInc;
    private javax.swing.JCheckBox pepperoniCB;
    private javax.swing.JCheckBox pepperoniCB1;
    private java.awt.Checkbox pepperoniCheckbox2;
    private javax.swing.JPanel pizza1Panel;
    private javax.swing.JCheckBox pizza2CB;
    private javax.swing.JLabel pizzaNoLabel;
    private javax.swing.JTextField postcodeField;
    private javax.swing.JLabel postcodeHint;
    private javax.swing.JLabel postcodeInvalid;
    private javax.swing.JLabel postcodeLabel;
    private javax.swing.JTextField priceField;
    private javax.swing.JTextField priceField1;
    private javax.swing.JTextField priceField3;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox<String> sizeComboBox;
    private javax.swing.JComboBox<String> sizeComboBox1;
    private javax.swing.JComboBox<String> sizeComboBox2;
    private javax.swing.JLabel specialOfferLabel;
    private javax.swing.JLabel specialOfferLabel1;
    private java.awt.TextArea summaryArea;
    private javax.swing.JCheckBox sweetcornCB;
    private javax.swing.JCheckBox sweetcornCB1;
    private java.awt.Checkbox sweetcornCheckbox2;
    private javax.swing.JPopupMenu testPop;
    private javax.swing.JRadioButton thinCrustRB;
    private javax.swing.JRadioButton thinCrustRB1;
    private javax.swing.JRadioButton tomatoRB;
    private javax.swing.JRadioButton tomatoRB1;
    private javax.swing.JTextField totalPriceField;
    private javax.swing.JCheckBox xCheeseCB;
    private javax.swing.JCheckBox xCheeseCB1;
    // End of variables declaration//GEN-END:variables
}
